FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# PollsX

Polls is a simple API allowing consumers to view polls and vote in them.

## Query Question [/questions/{question_id}]

+ Parameters
    + question_id: 1 (number, required) - Question ID
    
### Get by question id [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2015-08-05T08:40:51.620Z",
            "choices": [
                {
                    "choice": "Swift",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "votes": 256
                }
            ]
        }

## Vote [/questions/{question_id}/choices/{choice_id}]

+ Parameters
    + question_id: 1 (number, required) - Question ID
    + choice_id: Ruby (string, required)
    
### Vote a  Question [POST]

Vote for choices

+ Request (application/json)

+ Response 201 (text/html)

## Questions Collection [/questions{?page}]

+ Parameters
    + page: 1 (number, optional) - Page parameter
    
### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 200 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }
+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }